<div class="row mb-3">
    <div class="col">
        <select class="btn btn-toolbar border dropdown-toggle text-left" @onchange="ChangeTableStyle">
            <option selected value="">Choose Style</option>
            @foreach (var item in styles.TableStyles)
            {
                <option value="@item.Value">@item.Text</option>
            }
        </select>
    </div>
</div>

<div class="table-responsive">
    <table class="table @currentTableStyle table-bordered">
        <thead class="thead-light text-center">
            <tr>
                <th>Title</th>
                <th>Genre</th>
                <th>Release Date</th>
                <th><input type="checkbox" @bind="isDisplayed" /></th>
            </tr>
        </thead>
        <tbody class="text-center">
            <GenericList ListOfItems="Games">
                <ItemTemplate Context="game">
                    <IndividualGame CurrentGame="game" IsTable="true" Delete="DeleteGame" IsDisplayed="isDisplayed"/>
                </ItemTemplate>
            </GenericList>

            <Confirmation Title="Delete Game" @ref="confirmation" Cancel="OnCancel" Confirm="OnConfirm">
                <ChildContent>
                    <div class="text-left">Are you sure to delete the @tempGame.Title?</div>
                </ChildContent>
            </Confirmation>
        </tbody>
    </table>
</div>

@code
{
    [Parameter] public List<Game> Games { get; set; }
    [CascadingParameter] AppStyle styles { get; set; }

    private string currentTableStyle = "table-striped";

    private bool isDisplayed = false;
    private Confirmation confirmation;
    private Game tempGame;

    private void DeleteGame(Game game)
    {
        tempGame = game;
        confirmation.Show();
    }

    private void OnConfirm()
    {
        Games.Remove(tempGame);
        confirmation.Hide();
    }

    private void OnCancel()
    {
        confirmation.Hide();
    }

    private void ChangeTableStyle(ChangeEventArgs currentItem)
    {
        currentTableStyle = currentItem.Value.ToString();
    }
}

